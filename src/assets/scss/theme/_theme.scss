@use 'sass:map';
@use './_colors' as colors;
@use './_variables' as vars;

// Определяем переменные темы
$theme: (
  'colors': (
    'primary': map.get(colors.$color-map, 'primary'),
    'secondary': map.get(colors.$color-map, 'secondary'),
  ),
  'spacing': (
    'xs': vars.$spacing-xs,
    'sm': vars.$spacing-sm,
    'md': vars.$spacing-md,
    'lg': vars.$spacing-lg,
    'xl': vars.$spacing-xl,
  ),
  'radius': (
    'xs': vars.$radius-xs,
    'sm': vars.$radius-sm,
    'md': vars.$radius-md,
    'lg': vars.$radius-lg,
    'xl': vars.$radius-xl,
  ),
  'typography': (
    'fontFamily': vars.$font-family,
    'fontWeightRegular': vars.$font-weight-regular,
    'fontWeightMedium': vars.$font-weight-medium,
    'fontWeightBold': vars.$font-weight-bold,
  ),
  'shadows': (
    'small': vars.$shadow-small,
    'medium': vars.$shadow-medium,
    'large': vars.$shadow-large,
  ),
  'transitions': (
    'fast': vars.$transition-fast,
    'medium': vars.$transition-medium,
    'slow': vars.$transition-slow,
  ),
  'theme': (
    'font-size': vars.$theme-font-size,
    'font-weight': vars.$theme-font-weight,
    'line-height': vars.$theme-line-height,
    'color-text': vars.$theme-color-text,
    'color-body': vars.$theme-color-body,
  ),
);

// Функция для проверки значения
@function is-valid-value($value) {
  @return $value != null and $value != '' and $value != 'undefined' and $value
    != 'null';
}

// Миксин для применения темы
@mixin theme {
  @each $category, $values in $theme {
    @each $key, $value in $values {
      @if is-valid-value($value) {
        --#{$category}-#{$key}: #{$value};
      }
    }
  }
}

// Применяем тему к корневому элементу
:root {
  @include theme;
}

// Экспортируем значения для styled-components
:export {
  @each $category, $values in $theme {
    @each $key, $value in $values {
      @if is-valid-value($value) {
        #{$category}-#{$key}: #{$value};
      }
    }
  }
}
